<?php

use App\Models\Invoice;
use App\Mail\InvoiceM;
use App\Models\Country;
use App\Models\Guide;
use App\Models\Route;
use App\Models\User;


if (!function_exists('storeInvoice')) {
    function storeInvoice($pdfContent)
    {
        $userId = Auth::user()->id;
        $currentDate = now()->format('d-m-Y');

        $fileName = $userId . '@' . $currentDate . '@invoice.pdf';

        $tempFilePath = tempnam(sys_get_temp_dir(), 'invoice_');
        file_put_contents($tempFilePath, $pdfContent);

        $filePath = Storage::disk('public')->putFileAs('storage/invoices', $tempFilePath, $fileName);

        $invoice = new Invoice([
            'pdf_path' => $filePath,
        ]);
        $invoice->save();

        // Remove the temporary file after storing it in storage
        unlink($tempFilePath);

        return $invoice->id;
    }
}

if (!function_exists('invoice')) {
    function invoice()
    {
        $pdf = PDF::loadView('PDF.invoice', carContent());

        $pdfContent = $pdf->output();

        Mail::send(new InvoiceM( Auth::user()->email, $pdfContent));

        return storeInvoice($pdfContent);
    }
}
if (!function_exists('report_admin')) {
    function reportAdmin()
    {
        $userNumber = User::count();
        $guideNumber = Guide::count();
        $routesNumber = Route::count();
        $countriesNumber = Country::count();

        $data = [
            'title'=>'This is my city',
            'title_' => 'Report generated by',
            'date' => date('m/d/Y'),
            'userNumber' => $userNumber,
            'guideNumber' => $guideNumber,
            'routesNumber' => $routesNumber,
            'countriesNumber' => $countriesNumber
        ];

        $pdf = PDF::loadView('PDFreport', $data);

        return $pdf->download('report.pdf');
    }
}
